import requests
from bs4 import BeautifulSoup
import pandas
import argparse
import sqlite3

parser=argparse.ArgumentParser()
parser.add_argument("--page_num",help="enter number of pages to parse",type=int)
parser.add_argument("--dbname",help="enter number of pages to parse",type=string)
args=parser.parse_args()

oyo_url="https://www.oyorooms.com/hotels-in-mumbai/?page="
page_num=args.page_num
scraped_info_list=[]
connect(args.dbname)

for i in range(1,page_Num):
    req= requests.get(oyo_url + str(1)) #getting the information from the given URL
    content=req.content #get the content

    soup=BeautifulSoup(content,'html.parser')
    

    all_hotels=soup.find_all("div",{"class":"hotelCardListing"}) #tag,attribute and its value. All listing cards/information

    for hotel in all_hotels:
        hotel_dict={}
        hotel_dict["name"]=hotel.find("h3",{"class":"listingHotelDescription__hotelName"}).text #particular information
        hotel_dict ["address"]=hotel.find("span",{"itemprop":"streetAddress"}).text
        hotel_dict["price"]=hotel.find("span",{"class":"listingPrice__finalPrice"}).text 
        try:
            hotel_dict["rating"]=hotel.find("span",{"class":"hotelRating__ratingSummary"}).text
        except AttributeError:
            hotel_dict["rating"]=None 

        parent_amenity_elements=hotel.find("div", {"class":"amenityWrapper"})
        amenity_list=[]

        for amenity in parent_amenity_elements.find_all("div", {"class":"amenityWrapper__amenity"}):
            amenity_list.apphend(amenity.find("span",{"class":"d-body-sm"}).text)

        hotel_dict["amenities"]=", ".join(amenity_list[:-1]) #excluding the last element and joining all the elements in that list
        scraped_info_list.append(hotel_dict)
        insert_into_table(args.dbname,tuple(hotel_dict.values()))

get_hotel_info(args.dbname)

def connect(dbname):
    conn=sqlite3.connect(dbname)
    conn.execute("CREATE TABLE IF NOT EXISTS OYO_HOTELS ('NAME TEXT', 'ADDRESS TEXT' , 'PRICE INT', 'AMENITIES TEXT', 'RATINGS TEXT')")
    print("Table created successfully")
    conn.close()

def insert_into_table(dbname, values):
    conn=sqlite3.connect(dbname)
    insert_sql="INSERT INTO OYO_HOTELS('NAME','ADDRESS','PRICE','AMENITIES','RATINGS') VALUES(?,?,?,?,?)" #THE INFO WILL REPLACE THE QUESTION MARKS
    conn.execute(insert_sql,values)
    conn.commit()#commiting to the changes/database remains stable
    conn.close()
    
def get_hotel_info(dbname):
    conn=sqlite3.connect(dbname)
    cur=conn.cursor()
    cur.execute("SELECT * FROM OYO_HOTELS")
    table_data=cur.fetchall()
    for record in table_data:
        print(record)
    
    conn.close()
        
